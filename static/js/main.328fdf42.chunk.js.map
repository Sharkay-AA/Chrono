{"version":3,"sources":["Images/pause.svg","Images/play.svg","Images/reset.svg","Chrono/Chrono.js","App.js","index.js"],"names":["Chrono","props","useState","sessionTime","setSessionTime","sessionTimeFixed","setSessionTimeFixed","breakTime","setBreakTime","breakTimeFixed","setBreakTimeFixed","workingChrono","setWorkingChrono","useReducer","state","action","type","dispatch","useEffect","id","window","setInterval","clearInterval","handleSession","e","el","target","classList","contains","handleBreak","className","onClick","Math","trunc","src","pauseImg","playImg","resetImg","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAAe,G,MAAA,IAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,kC,OC+H1BA,MAzHf,SAAgBC,GAAQ,IAAD,EAEmBC,mBAAS,MAF5B,mBAEZC,EAFY,KAECC,EAFD,OAG6BF,mBAAS,MAHtC,mBAGZG,EAHY,KAGMC,EAHN,OAKeJ,mBAAS,KALxB,mBAKZK,EALY,KAKDC,EALC,OAMyBN,mBAAS,KANlC,mBAMZO,EANY,KAMIC,EANJ,OAQuBR,oBAAS,GARhC,mBAQZS,EARY,KAQGC,EARH,OAUOC,sBAE1B,SAAiBC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,OACGb,GAAe,EACfC,EAAeD,EAAc,GACtBI,GAAa,EACpBC,EAAaD,EAAY,GAClBJ,GAAe,GAAKI,GAAa,IACxCH,EAAeC,GACfG,EAAaC,QArBV,mBAULQ,GAVK,WA0BnBC,qBAAU,WAEN,IAAIC,EAQJ,OANIR,IACAQ,EAAKC,OAAOC,aAAY,WACpBJ,EAAS,CAAED,KAAM,WAClB,MAGA,WACHI,OAAOE,cAAcH,MAG1B,CAACR,IAEJ,IAIMY,EAAgB,SAACC,GAEnB,IAAMC,EAAKD,EAAEE,OAETD,EAAGE,UAAUC,SAAS,SAClBzB,EAAc,GAAK,IACnBC,EAAeD,EAAc,IAC7BG,EAAoBD,EAAmB,KAEpCoB,EAAGE,UAAUC,SAAS,UAC7BxB,EAAeD,EAAc,IAC7BG,EAAoBD,EAAmB,MAIzCwB,EAAc,SAACL,GAEjB,IAAMC,EAAKD,EAAEE,OAETD,EAAGE,UAAUC,SAAS,SAClBrB,EAAY,GAAK,IACjBC,EAAaD,EAAY,IACzBG,EAAkBD,EAAiB,KAEhCgB,EAAGE,UAAUC,SAAS,UAC7BpB,EAAaD,EAAY,IACzBG,EAAkBD,EAAiB,MAa3C,OACI,sBAAKqB,UAAWnB,EAAgB,6BAA+B,mBAA/D,UACI,sBAAKmB,UAAU,mBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,wBAAQC,QAASR,EAAeO,UAAU,QAA1C,eACA,+BAAOzB,EAAmB,KAC1B,wBAAQ0B,QAASR,EAAeO,UAAU,OAA1C,kBAEJ,sBAAKA,UAAU,iBAAf,UACI,wBAAQC,QAASF,EAAaC,UAAU,QAAxC,eACA,+BAAOrB,EAAiB,KACxB,wBAAQsB,QAASF,EAAaC,UAAU,OAAxC,qBAGR,6BAEQ,yCACQE,KAAKC,MAAM9B,EAAc,IADjC,cAC0CA,EAAc,GAAK,GAAnB,WAA4BA,EAAc,IAA1C,UAAoDA,EAAc,SAOpH,sBAAK2B,UAAU,wBAAf,UACI,wBAAQC,QApEF,WACdnB,GAAkBD,IAmEV,SACI,qBAAKuB,IAAKvB,EAAgBwB,EAAWC,MAEzC,wBAAQL,QApCF,WACVpB,GACAC,GAAkBD,GAEtBP,EAAeC,GACfG,EAAaC,IA+BL,SACI,qBAAKyB,IAAKG,aC9GfC,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCANS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.328fdf42.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pause.f8c47a1a.svg\";","export default __webpack_public_path__ + \"static/media/play.b23df41a.svg\";","export default __webpack_public_path__ + \"static/media/reset.adefad1d.svg\";","import React, { useState, useEffect, useReducer } from 'react';\r\nimport \"./Chrono.css\";\r\nimport pauseImg from \"../Images/pause.svg\"\r\nimport playImg from \"../Images/play.svg\"\r\nimport resetImg from \"../Images/reset.svg\"\r\n\r\nfunction Chrono(props) {\r\n\r\n    const [sessionTime, setSessionTime] = useState(1500);\r\n    const [sessionTimeFixed, setSessionTimeFixed] = useState(1500);\r\n\r\n    const [breakTime, setBreakTime] = useState(300);\r\n    const [breakTimeFixed, setBreakTimeFixed] = useState(300);\r\n\r\n    const [workingChrono, setWorkingChrono] = useState(false);\r\n\r\n    const [state, dispatch] = useReducer(reducer);\r\n\r\n    function reducer(state, action) {\r\n        switch (action.type) {\r\n            case \"TICK\":\r\n                if (sessionTime >= 0) {\r\n                    setSessionTime(sessionTime - 1)\r\n                } else if (breakTime >= 1) {\r\n                    setBreakTime(breakTime - 1)\r\n                } else if (sessionTime <= 0 && breakTime <= 0) {\r\n                    setSessionTime(sessionTimeFixed)\r\n                    setBreakTime(breakTimeFixed)\r\n                }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        let id;\r\n\r\n        if (workingChrono) {\r\n            id = window.setInterval(() => {\r\n                dispatch({ type: \"TICK\" })\r\n            }, 1000)\r\n        }\r\n\r\n        return () => {\r\n            window.clearInterval(id);\r\n        }\r\n\r\n    }, [workingChrono])\r\n\r\n    const playPause = () => {\r\n        setWorkingChrono(!workingChrono);\r\n    }\r\n\r\n    const handleSession = (e) => {\r\n\r\n        const el = e.target\r\n\r\n        if (el.classList.contains(\"minus\")) {\r\n            if (sessionTime / 60 > 1) {\r\n                setSessionTime(sessionTime - 60)\r\n                setSessionTimeFixed(sessionTimeFixed - 60)\r\n            }\r\n        } else if (el.classList.contains(\"plus\")) {\r\n            setSessionTime(sessionTime + 60)\r\n            setSessionTimeFixed(sessionTimeFixed + 60)\r\n        }\r\n    }\r\n\r\n    const handleBreak = (e) => {\r\n\r\n        const el = e.target\r\n\r\n        if (el.classList.contains(\"minus\")) {\r\n            if (breakTime / 60 > 1) {\r\n                setBreakTime(breakTime - 60)\r\n                setBreakTimeFixed(breakTimeFixed - 60)\r\n            }\r\n        } else if (el.classList.contains(\"plus\")) {\r\n            setBreakTime(breakTime + 60)\r\n            setBreakTimeFixed(breakTimeFixed + 60)\r\n        }\r\n\r\n    }\r\n\r\n    const resetFunc = () => {\r\n        if (workingChrono) {\r\n            setWorkingChrono(!workingChrono)\r\n        }\r\n        setSessionTime(sessionTimeFixed)\r\n        setBreakTime(breakTimeFixed)\r\n    };\r\n\r\n    return (\r\n        <div className={workingChrono ? \"container-chrono anim-glow\" : \"container-chrono\"}>\r\n            <div className=\"container-config\">\r\n                <div className=\"box-btns session\">\r\n                    <button onClick={handleSession} className=\"minus\">-</button>\r\n                    <span>{sessionTimeFixed / 60}</span>\r\n                    <button onClick={handleSession} className=\"plus\">+</button>\r\n                </div>\r\n                <div className=\"box-btns break\">\r\n                    <button onClick={handleBreak} className=\"minus\">-</button>\r\n                    <span>{breakTimeFixed / 60}</span>\r\n                    <button onClick={handleBreak} className=\"plus\">+</button>\r\n                </div>\r\n            </div>\r\n            <h1>\r\n                {sessionTime >= 0 ? (\r\n                    <span>\r\n                        {`${Math.trunc(sessionTime / 60)} : ${sessionTime % 60 < 10 ? `0${sessionTime % 60}` : `${sessionTime % 60}`}`}\r\n                    </span>\r\n                ) :\r\n                    <span>\r\n                        {`${Math.trunc(sessionTime / 60)} : ${sessionTime % 60 < 10 ? `0${sessionTime % 60}` : `${sessionTime % 60}`}`}\r\n                    </span>}\r\n            </h1>\r\n            <div className=\"container-controllers\">\r\n                <button onClick={playPause}>\r\n                    <img src={workingChrono ? pauseImg : playImg} />\r\n                </button>\r\n                <button onClick={resetFunc}>\r\n                    <img src={resetImg} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chrono;","import Chrono from './Chrono/Chrono'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Chrono />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}